<?php
/**
 * Consignment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Freightways Customer Integration
 *
 * Provisioning Freightways services as REST APIs
 *
 * OpenAPI spec version: 1.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Consignment Class Doc Comment
 *
 * @category Class
 * @description Defines a group of items to deliver
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Consignment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Consignment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'consignment_id' => 'string',
'consignment_reference' => 'string',
'consignment_date' => '\DateTime',
'created_date_time' => '\DateTime',
'sequence_id' => 'int',
'status' => 'string',
'pickup_rate_zone' => 'string',
'delivery_rate_zone' => 'string',
'signature_required' => 'bool',
'saturday_delivery' => 'bool',
'no_split_delivery' => 'bool',
'calculated_charge_excluding_gst' => 'float',
'gst' => 'float',
'calculated_charge_including_gst' => 'float',
'notifications' => '\Swagger\Client\Model\Notifications',
'sender' => '\Swagger\Client\Model\Sender',
'receiver' => '\Swagger\Client\Model\Receiver',
'customer_references' => '\Swagger\Client\Model\CustomerReferences',
'label' => '\Swagger\Client\Model\ConsignmentLabel',
'items' => '\Swagger\Client\Model\ConsignmentItem[]',
'cancellation_request' => '\Swagger\Client\Model\CancellationRequestItem'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'consignment_id' => 'string',
'consignment_reference' => null,
'consignment_date' => 'date',
'created_date_time' => 'date-time',
'sequence_id' => null,
'status' => null,
'pickup_rate_zone' => null,
'delivery_rate_zone' => null,
'signature_required' => null,
'saturday_delivery' => null,
'no_split_delivery' => null,
'calculated_charge_excluding_gst' => null,
'gst' => null,
'calculated_charge_including_gst' => null,
'notifications' => null,
'sender' => null,
'receiver' => null,
'customer_references' => null,
'label' => null,
'items' => null,
'cancellation_request' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'consignment_id' => 'consignmentId',
'consignment_reference' => 'consignmentReference',
'consignment_date' => 'consignmentDate',
'created_date_time' => 'createdDateTime',
'sequence_id' => 'sequenceId',
'status' => 'status',
'pickup_rate_zone' => 'pickupRateZone',
'delivery_rate_zone' => 'deliveryRateZone',
'signature_required' => 'signatureRequired',
'saturday_delivery' => 'saturdayDelivery',
'no_split_delivery' => 'noSplitDelivery',
'calculated_charge_excluding_gst' => 'calculatedChargeExcludingGst',
'gst' => 'gst',
'calculated_charge_including_gst' => 'calculatedChargeIncludingGst',
'notifications' => 'notifications',
'sender' => 'sender',
'receiver' => 'receiver',
'customer_references' => 'customerReferences',
'label' => 'label',
'items' => 'items',
'cancellation_request' => 'cancellationRequest'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'consignment_id' => 'setConsignmentId',
'consignment_reference' => 'setConsignmentReference',
'consignment_date' => 'setConsignmentDate',
'created_date_time' => 'setCreatedDateTime',
'sequence_id' => 'setSequenceId',
'status' => 'setStatus',
'pickup_rate_zone' => 'setPickupRateZone',
'delivery_rate_zone' => 'setDeliveryRateZone',
'signature_required' => 'setSignatureRequired',
'saturday_delivery' => 'setSaturdayDelivery',
'no_split_delivery' => 'setNoSplitDelivery',
'calculated_charge_excluding_gst' => 'setCalculatedChargeExcludingGst',
'gst' => 'setGst',
'calculated_charge_including_gst' => 'setCalculatedChargeIncludingGst',
'notifications' => 'setNotifications',
'sender' => 'setSender',
'receiver' => 'setReceiver',
'customer_references' => 'setCustomerReferences',
'label' => 'setLabel',
'items' => 'setItems',
'cancellation_request' => 'setCancellationRequest'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'consignment_id' => 'getConsignmentId',
'consignment_reference' => 'getConsignmentReference',
'consignment_date' => 'getConsignmentDate',
'created_date_time' => 'getCreatedDateTime',
'sequence_id' => 'getSequenceId',
'status' => 'getStatus',
'pickup_rate_zone' => 'getPickupRateZone',
'delivery_rate_zone' => 'getDeliveryRateZone',
'signature_required' => 'getSignatureRequired',
'saturday_delivery' => 'getSaturdayDelivery',
'no_split_delivery' => 'getNoSplitDelivery',
'calculated_charge_excluding_gst' => 'getCalculatedChargeExcludingGst',
'gst' => 'getGst',
'calculated_charge_including_gst' => 'getCalculatedChargeIncludingGst',
'notifications' => 'getNotifications',
'sender' => 'getSender',
'receiver' => 'getReceiver',
'customer_references' => 'getCustomerReferences',
'label' => 'getLabel',
'items' => 'getItems',
'cancellation_request' => 'getCancellationRequest'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['consignment_id'] = isset($data['consignment_id']) ? $data['consignment_id'] : null;
        $this->container['consignment_reference'] = isset($data['consignment_reference']) ? $data['consignment_reference'] : null;
        $this->container['consignment_date'] = isset($data['consignment_date']) ? $data['consignment_date'] : null;
        $this->container['created_date_time'] = isset($data['created_date_time']) ? $data['created_date_time'] : null;
        $this->container['sequence_id'] = isset($data['sequence_id']) ? $data['sequence_id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['pickup_rate_zone'] = isset($data['pickup_rate_zone']) ? $data['pickup_rate_zone'] : null;
        $this->container['delivery_rate_zone'] = isset($data['delivery_rate_zone']) ? $data['delivery_rate_zone'] : null;
        $this->container['signature_required'] = isset($data['signature_required']) ? $data['signature_required'] : null;
        $this->container['saturday_delivery'] = isset($data['saturday_delivery']) ? $data['saturday_delivery'] : null;
        $this->container['no_split_delivery'] = isset($data['no_split_delivery']) ? $data['no_split_delivery'] : null;
        $this->container['calculated_charge_excluding_gst'] = isset($data['calculated_charge_excluding_gst']) ? $data['calculated_charge_excluding_gst'] : null;
        $this->container['gst'] = isset($data['gst']) ? $data['gst'] : null;
        $this->container['calculated_charge_including_gst'] = isset($data['calculated_charge_including_gst']) ? $data['calculated_charge_including_gst'] : null;
        $this->container['notifications'] = isset($data['notifications']) ? $data['notifications'] : null;
        $this->container['sender'] = isset($data['sender']) ? $data['sender'] : null;
        $this->container['receiver'] = isset($data['receiver']) ? $data['receiver'] : null;
        $this->container['customer_references'] = isset($data['customer_references']) ? $data['customer_references'] : null;
        $this->container['label'] = isset($data['label']) ? $data['label'] : null;
        $this->container['items'] = isset($data['items']) ? $data['items'] : null;
        $this->container['cancellation_request'] = isset($data['cancellation_request']) ? $data['cancellation_request'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets consignment_id
     *
     * @return string
     */
    public function getConsignmentId()
    {
        return $this->container['consignment_id'];
    }

    /**
     * Sets consignment_id
     *
     * @param string $consignment_id Unique consignment identifier
     *
     * @return $this
     */
    public function setConsignmentId($consignment_id)
    {
        $this->container['consignment_id'] = $consignment_id;

        return $this;
    }

    /**
     * Gets consignment_reference
     *
     * @return string
     */
    public function getConsignmentReference()
    {
        return $this->container['consignment_reference'];
    }

    /**
     * Sets consignment_reference
     *
     * @param string $consignment_reference Defines the customers number for this consignment
     *
     * @return $this
     */
    public function setConsignmentReference($consignment_reference)
    {
        $this->container['consignment_reference'] = $consignment_reference;

        return $this;
    }

    /**
     * Gets consignment_date
     *
     * @return \DateTime
     */
    public function getConsignmentDate()
    {
        return $this->container['consignment_date'];
    }

    /**
     * Sets consignment_date
     *
     * @param \DateTime $consignment_date Date in Utc when consignment record was created
     *
     * @return $this
     */
    public function setConsignmentDate($consignment_date)
    {
        $this->container['consignment_date'] = $consignment_date;

        return $this;
    }

    /**
     * Gets created_date_time
     *
     * @return \DateTime
     */
    public function getCreatedDateTime()
    {
        return $this->container['created_date_time'];
    }

    /**
     * Sets created_date_time
     *
     * @param \DateTime $created_date_time Date in Utc when consignment record was created
     *
     * @return $this
     */
    public function setCreatedDateTime($created_date_time)
    {
        $this->container['created_date_time'] = $created_date_time;

        return $this;
    }

    /**
     * Gets sequence_id
     *
     * @return int
     */
    public function getSequenceId()
    {
        return $this->container['sequence_id'];
    }

    /**
     * Sets sequence_id
     *
     * @param int $sequence_id Used when customer operate multiple sites repeaing consignment numbers.
     *
     * @return $this
     */
    public function setSequenceId($sequence_id)
    {
        $this->container['sequence_id'] = $sequence_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status Consignment Status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets pickup_rate_zone
     *
     * @return string
     */
    public function getPickupRateZone()
    {
        return $this->container['pickup_rate_zone'];
    }

    /**
     * Sets pickup_rate_zone
     *
     * @param string $pickup_rate_zone Rating Zone of the Pickup
     *
     * @return $this
     */
    public function setPickupRateZone($pickup_rate_zone)
    {
        $this->container['pickup_rate_zone'] = $pickup_rate_zone;

        return $this;
    }

    /**
     * Gets delivery_rate_zone
     *
     * @return string
     */
    public function getDeliveryRateZone()
    {
        return $this->container['delivery_rate_zone'];
    }

    /**
     * Sets delivery_rate_zone
     *
     * @param string $delivery_rate_zone Rating Zone of the Delivery
     *
     * @return $this
     */
    public function setDeliveryRateZone($delivery_rate_zone)
    {
        $this->container['delivery_rate_zone'] = $delivery_rate_zone;

        return $this;
    }

    /**
     * Gets signature_required
     *
     * @return bool
     */
    public function getSignatureRequired()
    {
        return $this->container['signature_required'];
    }

    /**
     * Sets signature_required
     *
     * @param bool $signature_required Defines either signature is required or not
     *
     * @return $this
     */
    public function setSignatureRequired($signature_required)
    {
        $this->container['signature_required'] = $signature_required;

        return $this;
    }

    /**
     * Gets saturday_delivery
     *
     * @return bool
     */
    public function getSaturdayDelivery()
    {
        return $this->container['saturday_delivery'];
    }

    /**
     * Sets saturday_delivery
     *
     * @param bool $saturday_delivery Defines either saturday delivery is required or not
     *
     * @return $this
     */
    public function setSaturdayDelivery($saturday_delivery)
    {
        $this->container['saturday_delivery'] = $saturday_delivery;

        return $this;
    }

    /**
     * Gets no_split_delivery
     *
     * @return bool
     */
    public function getNoSplitDelivery()
    {
        return $this->container['no_split_delivery'];
    }

    /**
     * Sets no_split_delivery
     *
     * @param bool $no_split_delivery Defines either no-split delivery is required or not
     *
     * @return $this
     */
    public function setNoSplitDelivery($no_split_delivery)
    {
        $this->container['no_split_delivery'] = $no_split_delivery;

        return $this;
    }

    /**
     * Gets calculated_charge_excluding_gst
     *
     * @return float
     */
    public function getCalculatedChargeExcludingGst()
    {
        return $this->container['calculated_charge_excluding_gst'];
    }

    /**
     * Sets calculated_charge_excluding_gst
     *
     * @param float $calculated_charge_excluding_gst Calculated charge excluding GST
     *
     * @return $this
     */
    public function setCalculatedChargeExcludingGst($calculated_charge_excluding_gst)
    {
        $this->container['calculated_charge_excluding_gst'] = $calculated_charge_excluding_gst;

        return $this;
    }

    /**
     * Gets gst
     *
     * @return float
     */
    public function getGst()
    {
        return $this->container['gst'];
    }

    /**
     * Sets gst
     *
     * @param float $gst Calculated GST
     *
     * @return $this
     */
    public function setGst($gst)
    {
        $this->container['gst'] = $gst;

        return $this;
    }

    /**
     * Gets calculated_charge_including_gst
     *
     * @return float
     */
    public function getCalculatedChargeIncludingGst()
    {
        return $this->container['calculated_charge_including_gst'];
    }

    /**
     * Sets calculated_charge_including_gst
     *
     * @param float $calculated_charge_including_gst Calculated charge including GST
     *
     * @return $this
     */
    public function setCalculatedChargeIncludingGst($calculated_charge_including_gst)
    {
        $this->container['calculated_charge_including_gst'] = $calculated_charge_including_gst;

        return $this;
    }

    /**
     * Gets notifications
     *
     * @return \Swagger\Client\Model\Notifications
     */
    public function getNotifications()
    {
        return $this->container['notifications'];
    }

    /**
     * Sets notifications
     *
     * @param \Swagger\Client\Model\Notifications $notifications notifications
     *
     * @return $this
     */
    public function setNotifications($notifications)
    {
        $this->container['notifications'] = $notifications;

        return $this;
    }

    /**
     * Gets sender
     *
     * @return \Swagger\Client\Model\Sender
     */
    public function getSender()
    {
        return $this->container['sender'];
    }

    /**
     * Sets sender
     *
     * @param \Swagger\Client\Model\Sender $sender sender
     *
     * @return $this
     */
    public function setSender($sender)
    {
        $this->container['sender'] = $sender;

        return $this;
    }

    /**
     * Gets receiver
     *
     * @return \Swagger\Client\Model\Receiver
     */
    public function getReceiver()
    {
        return $this->container['receiver'];
    }

    /**
     * Sets receiver
     *
     * @param \Swagger\Client\Model\Receiver $receiver receiver
     *
     * @return $this
     */
    public function setReceiver($receiver)
    {
        $this->container['receiver'] = $receiver;

        return $this;
    }

    /**
     * Gets customer_references
     *
     * @return \Swagger\Client\Model\CustomerReferences
     */
    public function getCustomerReferences()
    {
        return $this->container['customer_references'];
    }

    /**
     * Sets customer_references
     *
     * @param \Swagger\Client\Model\CustomerReferences $customer_references customer_references
     *
     * @return $this
     */
    public function setCustomerReferences($customer_references)
    {
        $this->container['customer_references'] = $customer_references;

        return $this;
    }

    /**
     * Gets label
     *
     * @return \Swagger\Client\Model\ConsignmentLabel
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param \Swagger\Client\Model\ConsignmentLabel $label label
     *
     * @return $this
     */
    public function setLabel($label)
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Swagger\Client\Model\ConsignmentItem[]
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Swagger\Client\Model\ConsignmentItem[] $items Defines the set of the consignments
     *
     * @return $this
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets cancellation_request
     *
     * @return \Swagger\Client\Model\CancellationRequestItem
     */
    public function getCancellationRequest()
    {
        return $this->container['cancellation_request'];
    }

    /**
     * Sets cancellation_request
     *
     * @param \Swagger\Client\Model\CancellationRequestItem $cancellation_request cancellation_request
     *
     * @return $this
     */
    public function setCancellationRequest($cancellation_request)
    {
        $this->container['cancellation_request'] = $cancellation_request;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
