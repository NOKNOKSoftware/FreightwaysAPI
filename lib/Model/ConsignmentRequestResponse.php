<?php
/**
 * ConsignmentRequestResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Freightways Customer Integration
 *
 * Provisioning Freightways services as REST APIs
 *
 * OpenAPI spec version: 1.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ConsignmentRequestResponse Class Doc Comment
 *
 * @category Class
 * @description Defines a group of items to deliver
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConsignmentRequestResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ConsignmentRequestResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'warnings' => 'string[]',
'consignment_id' => 'string',
'calculated_charge_excluding_gst' => 'float',
'gst' => 'float',
'calculated_charge_including_gst' => 'float',
'customer_references' => '\Swagger\Client\Model\CustomerReferences',
'items' => '\Swagger\Client\Model\ConsignmentItemRequestResponse[]',
'label' => '\Swagger\Client\Model\ConsignmentLabel',
'saturday_delivery' => 'bool',
'no_split_delivery' => 'bool'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'warnings' => null,
'consignment_id' => null,
'calculated_charge_excluding_gst' => null,
'gst' => null,
'calculated_charge_including_gst' => null,
'customer_references' => null,
'items' => null,
'label' => null,
'saturday_delivery' => null,
'no_split_delivery' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'warnings' => 'warnings',
'consignment_id' => 'consignmentId',
'calculated_charge_excluding_gst' => 'calculatedChargeExcludingGst',
'gst' => 'gst',
'calculated_charge_including_gst' => 'calculatedChargeIncludingGst',
'customer_references' => 'customerReferences',
'items' => 'items',
'label' => 'label',
'saturday_delivery' => 'saturdayDelivery',
'no_split_delivery' => 'noSplitDelivery'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'warnings' => 'setWarnings',
'consignment_id' => 'setConsignmentId',
'calculated_charge_excluding_gst' => 'setCalculatedChargeExcludingGst',
'gst' => 'setGst',
'calculated_charge_including_gst' => 'setCalculatedChargeIncludingGst',
'customer_references' => 'setCustomerReferences',
'items' => 'setItems',
'label' => 'setLabel',
'saturday_delivery' => 'setSaturdayDelivery',
'no_split_delivery' => 'setNoSplitDelivery'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'warnings' => 'getWarnings',
'consignment_id' => 'getConsignmentId',
'calculated_charge_excluding_gst' => 'getCalculatedChargeExcludingGst',
'gst' => 'getGst',
'calculated_charge_including_gst' => 'getCalculatedChargeIncludingGst',
'customer_references' => 'getCustomerReferences',
'items' => 'getItems',
'label' => 'getLabel',
'saturday_delivery' => 'getSaturdayDelivery',
'no_split_delivery' => 'getNoSplitDelivery'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['warnings'] = isset($data['warnings']) ? $data['warnings'] : null;
        $this->container['consignment_id'] = isset($data['consignment_id']) ? $data['consignment_id'] : null;
        $this->container['calculated_charge_excluding_gst'] = isset($data['calculated_charge_excluding_gst']) ? $data['calculated_charge_excluding_gst'] : null;
        $this->container['gst'] = isset($data['gst']) ? $data['gst'] : null;
        $this->container['calculated_charge_including_gst'] = isset($data['calculated_charge_including_gst']) ? $data['calculated_charge_including_gst'] : null;
        $this->container['customer_references'] = isset($data['customer_references']) ? $data['customer_references'] : null;
        $this->container['items'] = isset($data['items']) ? $data['items'] : null;
        $this->container['label'] = isset($data['label']) ? $data['label'] : null;
        $this->container['saturday_delivery'] = isset($data['saturday_delivery']) ? $data['saturday_delivery'] : null;
        $this->container['no_split_delivery'] = isset($data['no_split_delivery']) ? $data['no_split_delivery'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets warnings
     *
     * @return string[]
     */
    public function getWarnings()
    {
        return $this->container['warnings'];
    }

    /**
     * Sets warnings
     *
     * @param string[] $warnings Warnings which were encountered during processing
     *
     * @return $this
     */
    public function setWarnings($warnings)
    {
        $this->container['warnings'] = $warnings;

        return $this;
    }

    /**
     * Gets consignment_id
     *
     * @return string
     */
    public function getConsignmentId()
    {
        return $this->container['consignment_id'];
    }

    /**
     * Sets consignment_id
     *
     * @param string $consignment_id Consignment Id
     *
     * @return $this
     */
    public function setConsignmentId($consignment_id)
    {
        $this->container['consignment_id'] = $consignment_id;

        return $this;
    }

    /**
     * Gets calculated_charge_excluding_gst
     *
     * @return float
     */
    public function getCalculatedChargeExcludingGst()
    {
        return $this->container['calculated_charge_excluding_gst'];
    }

    /**
     * Sets calculated_charge_excluding_gst
     *
     * @param float $calculated_charge_excluding_gst Calculated charge excluding GST
     *
     * @return $this
     */
    public function setCalculatedChargeExcludingGst($calculated_charge_excluding_gst)
    {
        $this->container['calculated_charge_excluding_gst'] = $calculated_charge_excluding_gst;

        return $this;
    }

    /**
     * Gets gst
     *
     * @return float
     */
    public function getGst()
    {
        return $this->container['gst'];
    }

    /**
     * Sets gst
     *
     * @param float $gst Calculated GST
     *
     * @return $this
     */
    public function setGst($gst)
    {
        $this->container['gst'] = $gst;

        return $this;
    }

    /**
     * Gets calculated_charge_including_gst
     *
     * @return float
     */
    public function getCalculatedChargeIncludingGst()
    {
        return $this->container['calculated_charge_including_gst'];
    }

    /**
     * Sets calculated_charge_including_gst
     *
     * @param float $calculated_charge_including_gst Calculated charge including GST
     *
     * @return $this
     */
    public function setCalculatedChargeIncludingGst($calculated_charge_including_gst)
    {
        $this->container['calculated_charge_including_gst'] = $calculated_charge_including_gst;

        return $this;
    }

    /**
     * Gets customer_references
     *
     * @return \Swagger\Client\Model\CustomerReferences
     */
    public function getCustomerReferences()
    {
        return $this->container['customer_references'];
    }

    /**
     * Sets customer_references
     *
     * @param \Swagger\Client\Model\CustomerReferences $customer_references customer_references
     *
     * @return $this
     */
    public function setCustomerReferences($customer_references)
    {
        $this->container['customer_references'] = $customer_references;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Swagger\Client\Model\ConsignmentItemRequestResponse[]
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Swagger\Client\Model\ConsignmentItemRequestResponse[] $items Consignment Items
     *
     * @return $this
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets label
     *
     * @return \Swagger\Client\Model\ConsignmentLabel
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param \Swagger\Client\Model\ConsignmentLabel $label label
     *
     * @return $this
     */
    public function setLabel($label)
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets saturday_delivery
     *
     * @return bool
     */
    public function getSaturdayDelivery()
    {
        return $this->container['saturday_delivery'];
    }

    /**
     * Sets saturday_delivery
     *
     * @param bool $saturday_delivery Defines whether saturday delivery has been accepted
     *
     * @return $this
     */
    public function setSaturdayDelivery($saturday_delivery)
    {
        $this->container['saturday_delivery'] = $saturday_delivery;

        return $this;
    }

    /**
     * Gets no_split_delivery
     *
     * @return bool
     */
    public function getNoSplitDelivery()
    {
        return $this->container['no_split_delivery'];
    }

    /**
     * Sets no_split_delivery
     *
     * @param bool $no_split_delivery Defines whether no-split delivery has been accepted
     *
     * @return $this
     */
    public function setNoSplitDelivery($no_split_delivery)
    {
        $this->container['no_split_delivery'] = $no_split_delivery;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
